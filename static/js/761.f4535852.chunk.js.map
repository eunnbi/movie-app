{"version":3,"file":"static/js/761.f4535852.chunk.js","mappings":"iJAIMA,GAAcC,EAAAA,EAAAA,IAAH,8IAGN,qBAAGC,MAAkBC,OAAOC,UAG5B,qBAAGF,MAAkBC,OAAOE,UAKjCC,EAAQC,EAAAA,GAAAA,IAAH,8BACPP,GAGEQ,EAAWD,EAAAA,GAAAA,IAAH,mRACVP,GAyBJ,IAZA,YAAkC,IAAXS,EAAU,EAAVA,OACrB,OACE,8BACGA,GACC,SAACH,EAAD,CAAOI,IAAG,UAnCK,mCAmCL,OAAsBD,GAAUE,IAAI,YAE9C,SAACH,EAAD,uC,+HCpCFI,EAASL,EAAAA,GAAAA,OAAH,2LAiBZ,I,MAAA,EANA,YAAuC,IAAjBM,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,OAC1B,OACE,SAACF,EAAD,CAAQG,QAASD,EAAjB,SAA0BD,GAAO,SAAC,MAAD,KAAc,SAAC,MAAD,O,8FCZ7CG,EAAkBT,EAAAA,GAAAA,IAAH,+PAafU,EAAeV,EAAAA,GAAAA,IAAH,2IASZW,EAASX,EAAAA,GAAAA,EAAH,6HAmCZ,I,EAAA,EA1BA,YAAsE,IAAjDY,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,cAAeC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,OAAWC,GAAS,YACnE,OACE,UAACP,GAAD,kBAAqBO,GAArB,eACE,0BACE,UAACC,EAAA,EAAD,CAASC,MAAO,EAAhB,UACGN,EACAA,IAAUC,IACT,iCACE,kBADF,IACUA,EADV,aAMN,UAACH,EAAD,YACE,cAAGS,UAAU,OAAb,UAAsBC,MAAMN,IAASA,IACzB,IAAXC,IACC,UAACJ,EAAD,YACE,SAAC,MAAD,KACA,0BAAOI,e,oBC5CbM,GAAYrB,EAAAA,EAAAA,IAAOsB,EAAAA,GAAPtB,CAAH,8LA6Cf,EAlCc,SAAC,GAAe,IAAbuB,EAAY,EAAZA,MACf,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEdd,EAKEW,EALFX,MACgBC,EAIdU,EAJFI,eACazB,EAGXqB,EAHFK,YACAC,EAEEN,EAFFM,GACcd,EACZQ,EADFO,aAEIC,GAAiBC,EAAAA,EAAAA,YAAWC,EAAAA,IAClC,GAAkCC,EAAAA,EAAAA,IAAQ,EAAOX,GAAzCjB,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,QAAS5B,EAAvB,EAAuBA,OAKvB,OAJA6B,EAAAA,EAAAA,YAAU,WACRL,EAAeM,SAAQ,SAACd,GAAD,OAAWA,EAAMM,KAAOA,GAAMM,GAAQ,QAC5D,KAGD,yBACE,UAACd,EAAD,CACEiB,GAAE,iBAAYT,GAAZ,OAAiBJ,GAAjB,OAA0BA,EAAS,IAAM,IAAzC,gBAAoDC,GADxD,WAGE,SAAC,EAAD,CAAYpB,KAAMA,EAAMC,OAAQA,KAChC,SAACgC,EAAA,EAAD,CAAarC,OAAQA,KACrB,SAAC,EAAD,CACEU,MAAOA,EACPC,cAAeA,EACfC,KAAM0B,SAASjB,EAAMkB,cACrB1B,OAAQA,EACRI,UAAU,qB,2EC3CduB,EAAkB1C,EAAAA,GAAAA,GAAH,wHAkBrB,IAVkB,SAAC,GAAgB,IAAd2C,EAAa,EAAbA,OACnB,OACE,SAACD,EAAD,UACGC,EAAOC,KAAI,SAACrB,GAAD,OACV,SAAC,IAAD,CAAsBA,MAAOA,GAAjBA,EAAMM,W,4JCbbgB,EAAc,WACvB,OAA8BC,EAAAA,EAAAA,MAA9B,eAAOC,EAAP,KAAgBC,EAAhB,MACAZ,EAAAA,EAAAA,YAAU,WACFW,GAASC,MACd,KCLMC,EAAY,SAACC,IACtBd,EAAAA,EAAAA,YAAU,WACNe,OAAOC,SAAS,CACZC,IAAK,MAEVH,K,uFCJMhB,EAAU,SAACoB,EAAc/B,GAClC,OAAkDS,EAAAA,EAAAA,YAAWuB,EAAAA,IAArDC,EAAR,EAAQA,iBAAkBC,EAA1B,EAA0BA,oBAC1B,GAAyBC,EAAAA,EAAAA,UAASJ,GAAlC,eAAOhD,EAAP,KAAc6B,EAAd,KAQA,MAAO,CAAE7B,KAAAA,EAAM6B,QAAAA,EAAS5B,OANT,SAACoD,GACZA,EAAEC,iBACFzB,GAAS7B,GACLA,EAAMmD,EAAoBlC,EAAMM,IAC/B2B,EAAiBjC,O,mECTjBsC,EAAgB,SAACC,GAC5B,IAAQrC,GAAWD,EAAAA,EAAAA,MAAXC,OAER,OADe,IAAIsC,gBAAgBtC,GACrBuC,IAAIF,K,4KCFdG,EAAcjE,EAAAA,GAAAA,QAAH,wGAGJ,qBAAGL,MAAkBuE,MAAMC,aAKlCC,EAAQpE,EAAAA,GAAAA,MAAH,iKAqBX,I,IAAA,EAXA,YAA0C,IAApBqE,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC3B,OACE,UAACL,EAAD,YACE,SAAChD,EAAA,EAAD,6BACA,2BACE,SAACmD,EAAD,CAAOG,KAAK,OAAOC,MAAOH,EAAOI,SAAUH,U,8BCf7CI,EAAa1E,EAAAA,GAAAA,KAAH,4CAIV2E,EAAW3E,EAAAA,GAAAA,EAAH,0IAuCd,MA/BA,YACE6C,EAAAA,EAAAA,MACA,IAAM+B,GAAWC,EAAAA,EAAAA,MACXC,GAAajB,EAAAA,EAAAA,GAAc,SACjC,GAA0BH,EAAAA,EAAAA,UAASoB,GAAnC,eAAOT,EAAP,KAAcU,EAAd,KACA,GAA4BC,EAAAA,EAAAA,UAAS,CAAC,SAAUX,GAAQY,EAAAA,GAAc,CACpEC,sBAAsB,IADhBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAUnB,OAHAhD,EAAAA,EAAAA,YAAU,WACRwC,EAAS,UAAD,OAAWP,MAClB,CAACA,KAEF,UAACK,EAAD,YACE,SAAC,EAAD,CAAYL,MAAOA,EAAOC,SATb,SAACX,GAChBoB,EAASpB,EAAE0B,OAAOb,UASfW,GACC,SAACG,EAAA,EAAD,IACY,KAAVjB,GAAgC,IAAhBe,EAAKG,QACvB,SAACZ,EAAD,gCAEA,8BACE,SAACa,EAAA,EAAD,CAAW7C,OAAQyC","sources":["components/Movie/MoviePoster.js","components/Movie/LikeButton.js","components/Movie/MovieInfo.js","components/Movie/index.js","components/common/MovieList.js","hooks/useCloseNav.js","hooks/useScroll.js","hooks/useLike.js","hooks/useQueryParam.js","components/SearchForm.js","pages/Search.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\r\n\r\nconst posterStyle = css`\r\n  height: 100%;\r\n  max-width: 350px;\r\n  @media ${({ theme }) => theme.device.tablet} {\r\n    width: 200px;\r\n  }\r\n  @media ${({ theme }) => theme.device.mobile} {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  ${posterStyle}\r\n`;\r\n\r\nconst NoPoster = styled.div`\r\n  ${posterStyle}\r\n  min-height: 300px;\r\n  background-color: white;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  text-transform: uppercase;\r\n  padding: 0 10px;\r\n`;\r\n\r\nfunction MoviePoster({ poster }) {\r\n  return (\r\n    <>\r\n      {poster ? (\r\n        <Image src={`${IMAGE_BASE_URL}${poster}`} alt=\"poster\" />\r\n      ) : (\r\n        <NoPoster>NOT AVAILABLE POSTER</NoPoster>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePoster;\r\n","import { FaRegHeart, FaHeart } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: #a20100;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  font-size: 2rem;\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n  z-index: 1;\r\n`;\r\n\r\nfunction LikeButton({ like, onLike }) {\r\n  return (\r\n    <Button onClick={onLike}>{like ? <FaHeart /> : <FaRegHeart />}</Button>\r\n  );\r\n}\r\n\r\nexport default LikeButton;\r\n","import { AiFillStar } from \"react-icons/ai\";\r\nimport Heading from \"../common/Heading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMovieInfo = styled.div`\r\n  visibility: hidden;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  transition: all 0.3s linear;\r\n  transform: translateY(100%);\r\n`;\r\n\r\nconst MovieInfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  .year {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Rating = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    color: #f4c519;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nfunction MovieInfo({ title, originalTitle, year, rating, ...props }) {\r\n  return (\r\n    <StyledMovieInfo {...props}>\r\n      <div>\r\n        <Heading level={4}>\r\n          {title}\r\n          {title !== originalTitle && (\r\n            <>\r\n              <br />({originalTitle})\r\n            </>\r\n          )}\r\n        </Heading>\r\n      </div>\r\n      <MovieInfoRow>\r\n        <p className=\"year\">{!isNaN(year) && year}</p>\r\n        {rating !== 0 && (\r\n          <Rating>\r\n            <AiFillStar />\r\n            <span>{rating}</span>\r\n          </Rating>\r\n        )}\r\n      </MovieInfoRow>\r\n    </StyledMovieInfo>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport { favoritesStateContext } from \"../../contexts/favorites\";\r\nimport { useLike } from \"../../hooks/useLike\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieLink = styled(Link)`\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  &:hover .MovieInfo {\r\n    visibility: visible;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst Movie = ({ movie }) => {\r\n  const { search, pathname } = useLocation();\r\n  const {\r\n    title,\r\n    original_title: originalTitle,\r\n    poster_path: poster,\r\n    id,\r\n    vote_average: rating,\r\n  } = movie;\r\n  const favoriteMovies = useContext(favoritesStateContext);\r\n  const { like, setLike, onLike } = useLike(false, movie);\r\n  useEffect(() => {\r\n    favoriteMovies.forEach((movie) => movie.id === id && setLike(true));\r\n  }, []);\r\n\r\n  return (\r\n    <li>\r\n      <MovieLink\r\n        to={`/movie/${id}${search}${search ? \"&\" : \"?\"}from=${pathname}`}\r\n      >\r\n        <LikeButton like={like} onLike={onLike} />\r\n        <MoviePoster poster={poster} />\r\n        <MovieInfo\r\n          title={title}\r\n          originalTitle={originalTitle}\r\n          year={parseInt(movie.release_date)}\r\n          rating={rating}\r\n          className=\"MovieInfo\"\r\n        />\r\n      </MovieLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"../Movie\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMovieList = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <StyledMovieList>\r\n      {movies.map((movie) => (\r\n        <Movie key={movie.id} movie={movie} />\r\n      ))}\r\n    </StyledMovieList>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { useEffect } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nexport const useCloseNav = () => {\r\n    const [showNav, setShowNav] = useOutletContext();\r\n    useEffect(() => {\r\n        if (showNav) setShowNav();\r\n    }, []);\r\n};","import { useEffect } from \"react\";\r\n\r\nexport const useScroll = (deps) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0\r\n        });\r\n    }, deps);\r\n};","import { useState, useContext } from \"react\";\r\nimport { favoritesDispatchContext } from \"../contexts/favorites\";\r\n\r\nexport const useLike = (initialState, movie) => {\r\n    const { addFavoriteMovie, removeFavoriteMovie } = useContext(favoritesDispatchContext);\r\n    const [like , setLike] = useState(initialState);\r\n\r\n    const onLike = (e) => {\r\n        e.preventDefault();\r\n        setLike(!like);\r\n        if (like) removeFavoriteMovie(movie.id);\r\n        else addFavoriteMovie(movie);\r\n    };\r\n    return { like, setLike, onLike };\r\n};","import { useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParam = (key) => {\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  return params.get(key);\r\n};\r\n","import Heading from \"./common/Heading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst FormWrapper = styled.section`\r\n  margin-bottom: 50px;\r\n  h1 {\r\n    color: ${({ theme }) => theme.color.blueBlack};\r\n    margin-bottom: 25px;\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  border: none;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  height: 3rem;\r\n  border-radius: 5px;\r\n  padding-left: 10px;\r\n  font-size: 20px;\r\n`;\r\n\r\nfunction SearchForm({ query, onSearch }) {\r\n  return (\r\n    <FormWrapper>\r\n      <Heading>Search Movies</Heading>\r\n      <form>\r\n        <Input type=\"text\" value={query} onChange={onSearch} />\r\n      </form>\r\n    </FormWrapper>\r\n  );\r\n}\r\n\r\nexport default SearchForm;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useQuery } from \"react-query\";\r\nimport Loading from \"../components/common/Loading\";\r\nimport MovieList from \"../components/common/MovieList\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport { searchMovies } from \"../lib/api\";\r\nimport { useCloseNav } from \"../hooks\";\r\nimport styled from \"styled-components\";\r\nimport { useQueryParam } from \"../hooks/useQueryParam\";\r\n\r\nconst SearchMain = styled.main`\r\n  padding: 3rem 0;\r\n`;\r\n\r\nconst NotFound = styled.p`\r\n  margin-top: 5px;\r\n  color: #bb2524;\r\n  font-size: 15px;\r\n  text-transform: capitalize;\r\n  letter-spacing: 2px;\r\n`;\r\n\r\nfunction Search() {\r\n  useCloseNav();\r\n  const navigate = useNavigate();\r\n  const queryParam = useQueryParam(\"query\");\r\n  const [query, setQuery] = useState(queryParam);\r\n  const { isLoading, data } = useQuery([\"search\", query], searchMovies, {\r\n    refetchOnWindowFocus: false,\r\n  });\r\n  const onSearch = (e) => {\r\n    setQuery(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    navigate(`?query=${query}`);\r\n  }, [query]);\r\n  return (\r\n    <SearchMain>\r\n      <SearchForm query={query} onSearch={onSearch} />\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : query !== \"\" && data.length === 0 ? (\r\n        <NotFound>Movie Not Found!</NotFound>\r\n      ) : (\r\n        <section>\r\n          <MovieList movies={data} />\r\n        </section>\r\n      )}\r\n    </SearchMain>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n"],"names":["posterStyle","css","theme","device","tablet","mobile","Image","styled","NoPoster","poster","src","alt","Button","like","onLike","onClick","StyledMovieInfo","MovieInfoRow","Rating","title","originalTitle","year","rating","props","Heading","level","className","isNaN","MovieLink","Link","movie","useLocation","search","pathname","original_title","poster_path","id","vote_average","favoriteMovies","useContext","favoritesStateContext","useLike","setLike","useEffect","forEach","to","MoviePoster","parseInt","release_date","StyledMovieList","movies","map","useCloseNav","useOutletContext","showNav","setShowNav","useScroll","deps","window","scrollTo","top","initialState","favoritesDispatchContext","addFavoriteMovie","removeFavoriteMovie","useState","e","preventDefault","useQueryParam","key","URLSearchParams","get","FormWrapper","color","blueBlack","Input","query","onSearch","type","value","onChange","SearchMain","NotFound","navigate","useNavigate","queryParam","setQuery","useQuery","searchMovies","refetchOnWindowFocus","isLoading","data","target","Loading","length","MovieList"],"sourceRoot":""}