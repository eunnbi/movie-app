{"version":3,"file":"static/js/922.8c2ef988.chunk.js","mappings":"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","sources":["components/Movie/MoviePoster.js","components/Movie/LikeButton.js","components/Movie/MovieInfo.js","components/Movie/index.js","hooks/useCloseNav.js","hooks/useLike.js","hooks/useScroll.js","components/Home/SectionTitle.js","components/Home/HomeMovieList.js","pages/Home.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\r\n\r\nconst posterStyle = css`\r\n  height: 100%;\r\n  max-width: 350px;\r\n  @media ${({ theme }) => theme.device.tablet} {\r\n    width: 200px;\r\n  }\r\n  @media ${({ theme }) => theme.device.mobile} {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  ${posterStyle}\r\n`;\r\n\r\nconst NoPoster = styled.div`\r\n  ${posterStyle}\r\n  min-height: 300px;\r\n  background-color: white;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  text-transform: uppercase;\r\n  padding: 0 10px;\r\n`;\r\n\r\nfunction MoviePoster({ poster }) {\r\n  return (\r\n    <>\r\n      {poster ? (\r\n        <Image src={`${IMAGE_BASE_URL}${poster}`} alt=\"poster\" />\r\n      ) : (\r\n        <NoPoster>NOT AVAILABLE POSTER</NoPoster>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePoster;\r\n","import { FaRegHeart, FaHeart } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: #a20100;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  font-size: 2rem;\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n  z-index: 1;\r\n`;\r\n\r\nfunction LikeButton({ like, onLike }) {\r\n  return (\r\n    <Button onClick={onLike}>{like ? <FaHeart /> : <FaRegHeart />}</Button>\r\n  );\r\n}\r\n\r\nexport default LikeButton;\r\n","import { AiFillStar } from \"react-icons/ai\";\r\nimport Heading from \"../common/Heading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMovieInfo = styled.div`\r\n  visibility: hidden;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  transition: all 0.3s linear;\r\n  transform: translateY(100%);\r\n`;\r\n\r\nconst MovieInfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  .year {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Rating = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    color: #f4c519;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nfunction MovieInfo({ title, originalTitle, year, rating, ...props }) {\r\n  return (\r\n    <StyledMovieInfo {...props}>\r\n      <div>\r\n        <Heading level={4}>\r\n          {title}\r\n          {title !== originalTitle && (\r\n            <>\r\n              <br />({originalTitle})\r\n            </>\r\n          )}\r\n        </Heading>\r\n      </div>\r\n      <MovieInfoRow>\r\n        <p className=\"year\">{!isNaN(year) && year}</p>\r\n        {rating !== 0 && (\r\n          <Rating>\r\n            <AiFillStar />\r\n            <span>{rating}</span>\r\n          </Rating>\r\n        )}\r\n      </MovieInfoRow>\r\n    </StyledMovieInfo>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport { favoritesStateContext } from \"../../contexts/favorites\";\r\nimport { useLike } from \"../../hooks/useLike\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieLink = styled(Link)`\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  &:hover .MovieInfo {\r\n    visibility: visible;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst Movie = ({ movie }) => {\r\n  const { search, pathname } = useLocation();\r\n  const {\r\n    title,\r\n    original_title: originalTitle,\r\n    poster_path: poster,\r\n    id,\r\n    vote_average: rating,\r\n  } = movie;\r\n  const favoriteMovies = useContext(favoritesStateContext);\r\n  const { like, setLike, onLike } = useLike(false, movie);\r\n  useEffect(() => {\r\n    favoriteMovies.forEach((movie) => movie.id === id && setLike(true));\r\n  }, []);\r\n\r\n  return (\r\n    <li>\r\n      <MovieLink\r\n        to={`/movie/${id}${search}${search ? \"&\" : \"?\"}from=${pathname}`}\r\n      >\r\n        <LikeButton like={like} onLike={onLike} />\r\n        <MoviePoster poster={poster} />\r\n        <MovieInfo\r\n          title={title}\r\n          originalTitle={originalTitle}\r\n          year={parseInt(movie.release_date)}\r\n          rating={rating}\r\n          className=\"MovieInfo\"\r\n        />\r\n      </MovieLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import { useEffect } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nexport const useCloseNav = () => {\r\n    const [showNav, setShowNav] = useOutletContext();\r\n    useEffect(() => {\r\n        if (showNav) setShowNav();\r\n    }, []);\r\n};","import { useState, useContext } from \"react\";\r\nimport { favoritesDispatchContext } from \"../contexts/favorites\";\r\n\r\nexport const useLike = (initialState, movie) => {\r\n    const { addFavoriteMovie, removeFavoriteMovie } = useContext(favoritesDispatchContext);\r\n    const [like , setLike] = useState(initialState);\r\n\r\n    const onLike = (e) => {\r\n        e.preventDefault();\r\n        setLike(!like);\r\n        if (like) removeFavoriteMovie(movie.id);\r\n        else addFavoriteMovie(movie);\r\n    };\r\n    return { like, setLike, onLike };\r\n};","import { useEffect } from \"react\";\r\n\r\nexport const useScroll = (deps) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0\r\n        });\r\n    }, deps);\r\n};","import Heading from \"../common/Heading\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FaChevronRight } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledSectionTitle = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n  h1 {\r\n    margin-right: 10px;\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nfunction SectionTitle({ path, title }) {\r\n  return (\r\n    <StyledSectionTitle to={path}>\r\n      <Heading>{title}</Heading>\r\n      <FaChevronRight />\r\n    </StyledSectionTitle>\r\n  );\r\n}\r\n\r\nexport default SectionTitle;\r\n","import Movie from \"../Movie\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledHomeMoviesList = styled.ul`\r\n  display: flex;\r\n  gap: 1rem;\r\n  overflow-x: scroll;\r\n  padding-bottom: 1.5rem;\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n    height: 0.5rem;\r\n    display: block;\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background-color: rgba(0, 0, 0, 0.3);\r\n    border-radius: 5px;\r\n    transition: all 0.3s ease-in-out;\r\n    &:active {\r\n      background-color: rgba(0, 0, 0, 0.8);\r\n    }\r\n  }\r\n  &::-webkit-scrollbar-track {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nfunction HomeMovieList({ movies }) {\r\n  return (\r\n    <StyledHomeMoviesList>\r\n      {movies.map((movie, index) => (\r\n        <Movie key={index} movie={movie} />\r\n      ))}\r\n    </StyledHomeMoviesList>\r\n  );\r\n}\r\n\r\nexport default HomeMovieList;\r\n","import { useContext } from \"react\";\r\nimport Loading from \"../components/common/Loading\";\r\nimport SectionTitle from \"../components/Home/SectionTitle\";\r\nimport HomeMovieList from \"../components/Home/HomeMovieList\";\r\nimport { moviesContext } from \"../contexts/movies\";\r\nimport { useCloseNav, useScroll } from \"../hooks\";\r\n\r\nconst Home = () => {\r\n  useCloseNav();\r\n  useScroll([]);\r\n  const { loading, movies } = useContext(moviesContext);\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <main>\r\n      {movies &&\r\n        Object.entries(movies).map((entrie, index) => (\r\n          <section key={index}>\r\n            <SectionTitle\r\n              title={entrie[0].replace(\"_\", \" \")}\r\n              path={`/movies/${entrie[0]}?page=1`}\r\n            />\r\n            <HomeMovieList movies={entrie[1].slice(0, 20)} />\r\n          </section>\r\n        ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["posterStyle","css","theme","device","tablet","mobile","Image","styled","NoPoster","poster","src","alt","Button","like","onLike","onClick","StyledMovieInfo","MovieInfoRow","Rating","title","originalTitle","year","rating","props","Heading","level","className","isNaN","MovieLink","Link","movie","useLocation","search","pathname","original_title","poster_path","id","vote_average","favoriteMovies","useContext","favoritesStateContext","useLike","setLike","useEffect","forEach","to","MoviePoster","parseInt","release_date","useCloseNav","useOutletContext","showNav","setShowNav","initialState","favoritesDispatchContext","addFavoriteMovie","removeFavoriteMovie","useState","e","preventDefault","useScroll","deps","window","scrollTo","top","StyledSectionTitle","path","StyledHomeMoviesList","movies","map","index","Movie","moviesContext","loading","Loading","Object","entries","entrie","replace","slice"],"sourceRoot":""}