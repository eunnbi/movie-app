{"version":3,"file":"static/js/985.d25f3872.chunk.js","mappings":"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","sources":["components/Movie/MoviePoster.js","hooks/useCloseNav.js","hooks/useScroll.js","hooks/useLike.js","components/Details/BackButton.js","components/Details/Genres.js","components/Details/DetailsInfo.js","components/Review/NoReviews.js","components/Review/ReviewItem.js","components/Review/ReviewList.js","components/Review/ReviewSection.js","pages/Details.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\r\n\r\nconst posterStyle = css`\r\n  height: 100%;\r\n  max-width: 300px;\r\n  @media ${({ theme }) => theme.device.tablet} {\r\n    width: 200px;\r\n  }\r\n  @media ${({ theme }) => theme.device.mobile} {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  ${posterStyle}\r\n`;\r\n\r\nconst NoPoster = styled.div`\r\n  ${posterStyle}\r\n  background-color: white;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  text-transform: uppercase;\r\n  padding: 0 10px;\r\n`;\r\n\r\nfunction MoviePoster({ poster }) {\r\n  return (\r\n    <>\r\n      {poster ? (\r\n        <Image src={`${IMAGE_BASE_URL}${poster}`} alt=\"poster\" />\r\n      ) : (\r\n        <NoPoster>NOT AVAILABLE POSTER</NoPoster>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePoster;\r\n","import { useEffect } from \"react\";\r\nimport { useOutletContext } from \"react-router-dom\";\r\n\r\nexport const useCloseNav = () => {\r\n    const [showNav, setShowNav] = useOutletContext();\r\n    useEffect(() => {\r\n        if (showNav) setShowNav();\r\n    }, []);\r\n};","import { useEffect } from \"react\";\r\n\r\nexport const useScroll = (deps) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0\r\n        });\r\n    }, deps);\r\n};","import { useState, useContext } from \"react\";\r\nimport { favoritesDispatchContext } from \"../contexts/favorites\";\r\n\r\nexport const useLike = (initialState, movie) => {\r\n    const { addFavoriteMovie, removeFavoriteMovie } = useContext(favoritesDispatchContext);\r\n    const [like , setLike] = useState(initialState);\r\n\r\n    const onLike = (e) => {\r\n        e.preventDefault();\r\n        setLike(!like);\r\n        if (like) removeFavoriteMovie(movie.id);\r\n        else addFavoriteMovie(movie);\r\n    };\r\n    return { like, setLike, onLike };\r\n};","import { useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  background-color: ${({ theme }) => theme.color.skyBlue};\r\n  text-transform: capitalize;\r\n  padding: 0.4rem 0.6rem;\r\n  border-radius: 5px;\r\n  margin-top: 2rem;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.blueBlack};\r\n  }\r\n`;\r\n\r\nfunction BackButton() {\r\n  const navigate = useNavigate();\r\n  return <Button onClick={() => navigate(-1)}>back to movies</Button>;\r\n}\r\n\r\nexport default BackButton;\r\n","import styled from \"styled-components\";\r\n\r\nconst GenresList = styled.ul`\r\n  display: flex;\r\n  margin-bottom: 1.8rem;\r\n  flex-wrap: wrap;\r\n  gap: 0.5rem;\r\n`;\r\n\r\nconst GenresItem = styled.li`\r\n  background-color: #fff;\r\n  color: ${({ theme }) => theme.color.gray};\r\n  padding: 0.3rem 0.6rem;\r\n  border-radius: 5px;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nfunction Genres({ genres }) {\r\n  return (\r\n    <GenresList>\r\n      {genres.map((genre, index) => (\r\n        <GenresItem key={index}>{genre.name}</GenresItem>\r\n      ))}\r\n    </GenresList>\r\n  );\r\n}\r\n\r\nexport default Genres;\r\n","import Heading from \"../common/Heading\";\r\nimport BackButton from \"./BackButton\";\r\nimport Genres from \"./Genres\";\r\nimport styled from \"styled-components\";\r\nimport { AiFillStar } from \"react-icons/ai\";\r\n\r\nconst DetailHeading = styled.div`\r\n  margin-bottom: 1.5rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.7rem;\r\n  letter-spacing: 1px;\r\n  p {\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  opacity: 0.9;\r\n  font-size: 1.2rem;\r\n  line-height: 2.3rem;\r\n`;\r\n\r\nconst Rating = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  svg {\r\n    color: #f4c519;\r\n  }\r\n`;\r\n\r\nfunction DetailsInfo({ details }) {\r\n  const {\r\n    title,\r\n    release_date,\r\n    original_title,\r\n    genres,\r\n    overview,\r\n    vote_average,\r\n  } = details;\r\n  const year = parseInt(release_date);\r\n  return (\r\n    <article>\r\n      <DetailHeading>\r\n        <Heading>{title}</Heading>\r\n        {title !== original_title && (\r\n          <Heading level={3}>{original_title}</Heading>\r\n        )}\r\n        <p>{!isNaN(year) && year}</p>\r\n        <Rating>\r\n          <AiFillStar />\r\n          <span>{vote_average}</span>\r\n        </Rating>\r\n      </DetailHeading>\r\n      <Genres genres={genres} />\r\n      <Overview>{overview}</Overview>\r\n      <BackButton />\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default DetailsInfo;\r\n","import { ImCrying } from \"react-icons/im\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NoReviewsWrapper = styled.p`\r\n  font-size: 1.8rem;\r\n  color: ${({ theme }) => theme.color.blueBlack};\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 2rem;\r\n  svg {\r\n    margin: 3px 0 0 10px;\r\n  }\r\n`;\r\n\r\nfunction NoReviews() {\r\n  return (\r\n    <NoReviewsWrapper>\r\n      no reviews <ImCrying />\r\n    </NoReviewsWrapper>\r\n  );\r\n}\r\n\r\nexport default NoReviews;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useToggle } from \"../../hooks\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst StyledReviewItem = styled.li`\r\n  background-color: #fff;\r\n  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.1);\r\n  margin-bottom: 2.5rem;\r\n  border-radius: 5px;\r\n  padding: 0.9rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 0.5rem;\r\n  .username {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nconst Content = styled.p`\r\n  opacity: 0.9;\r\n  line-height: 1.5;\r\n  a {\r\n    text-decoration: underline;\r\n  }\r\n  ${({ close }) =>\r\n    close &&\r\n    css`\r\n      overflow: hidden;\r\n      text-overflow: ellipsis;\r\n      display: -webkit-box;\r\n      -webkit-line-clamp: 3;\r\n      white-space: normal;\r\n      -webkit-box-orient: vertical;\r\n    `}\r\n`;\r\nconst Toggle = styled.p`\r\n  color: ${({ theme }) => theme.color.skyBlue};\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n`;\r\n\r\nfunction ReviewItem({ text, username }) {\r\n  const [open, setOpen] = useToggle(false);\r\n  const [show, setShow] = useState(false);\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    ref.current.innerHTML = text;\r\n    if (ref.current.scrollHeight > 72) {\r\n      setShow(true);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <StyledReviewItem>\r\n      <Content close={!open} ref={ref} />\r\n      {show && (\r\n        <Toggle onClick={setOpen}>{open ? \"show less\" : \"read more\"}</Toggle>\r\n      )}\r\n      <p className=\"username\">{username}</p>\r\n    </StyledReviewItem>\r\n  );\r\n}\r\n\r\nexport default ReviewItem;\r\n","import ReviewItem from \"./ReviewItem\";\r\n\r\nfunction ReviewList({ reviews }){\r\n    return (\r\n        <ul>\r\n            {reviews.map((review, index) => (\r\n                <ReviewItem\r\n                    key={index}\r\n                    text={review.content}\r\n                    username={review.author_details.username}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ReviewList;","import Heading from \"../common/Heading\";\r\nimport NoReviews from \"./NoReviews\";\r\nimport ReviewList from \"./ReviewList\";\r\nimport { MdOutlineRateReview } from \"react-icons/md\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ReviewHeading = styled.div`\r\n  color: ${({ theme }) => theme.color.blueBlack};\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 1.8rem;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 2rem;\r\n  border-bottom: 1px solid ${({ theme }) => theme.color.gray};\r\n  padding-bottom: 0.6rem;\r\n  svg {\r\n    margin: 5px 0 0 8px;\r\n  }\r\n`;\r\n\r\nfunction ReviewSection({ reviews }) {\r\n  return (\r\n    <article>\r\n      <ReviewHeading>\r\n        <Heading>Reviews</Heading>\r\n        <MdOutlineRateReview />\r\n      </ReviewHeading>\r\n      {reviews.length === 0 ? <NoReviews /> : <ReviewList reviews={reviews} />}\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default ReviewSection;\r\n","import { useParams } from \"react-router-dom\";\r\nimport { useQueries } from \"react-query\";\r\nimport Loading from \"../components/common/Loading\";\r\nimport MoviePoster from \"../components/Movie/MoviePoster\";\r\nimport DetailsInfo from \"../components/Details/DetailsInfo\";\r\nimport ReviewSection from \"../components/Review/ReviewSection\";\r\nimport { getDetails, getReviews } from \"../lib/api\";\r\nimport { useScroll } from \"../hooks\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailMain = styled.main`\r\n  margin-top: 0;\r\n`;\r\n\r\nconst DetailRow = styled.div`\r\n  display: flex;\r\n  gap: 2rem;\r\n  margin-bottom: 6rem;\r\n  @media screen and (max-width: 600px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Details = () => {\r\n  const { id } = useParams();\r\n  const [\r\n    { isLoading: detailsLoading, data: details },\r\n    { isLoading: reviewsLoading, data: reviews },\r\n  ] = useQueries([\r\n    { queryKey: [\"details\", id], queryFn: getDetails },\r\n    { queryKey: [\"reviews\", id], queryFn: getReviews },\r\n  ]);\r\n  const loading = detailsLoading || reviewsLoading;\r\n  useScroll([]);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    <DetailMain>\r\n      <DetailRow>\r\n        <MoviePoster poster={details.poster_path} />\r\n        <DetailsInfo details={details} />\r\n      </DetailRow>\r\n      <ReviewSection reviews={reviews} />\r\n    </DetailMain>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n"],"names":["posterStyle","css","theme","device","tablet","mobile","Image","styled","NoPoster","poster","src","alt","useCloseNav","useOutletContext","showNav","setShowNav","useEffect","useScroll","deps","window","scrollTo","top","useLike","initialState","movie","useContext","favoritesDispatchContext","addFavoriteMovie","removeFavoriteMovie","useState","like","setLike","onLike","e","preventDefault","id","Button","color","skyBlue","blueBlack","navigate","useNavigate","onClick","GenresList","GenresItem","gray","genres","map","genre","index","name","DetailHeading","Overview","Rating","details","title","release_date","original_title","overview","vote_average","year","parseInt","Heading","level","isNaN","NoReviewsWrapper","StyledReviewItem","Content","close","Toggle","text","username","useToggle","open","setOpen","show","setShow","ref","useRef","current","innerHTML","scrollHeight","className","reviews","review","content","author_details","ReviewHeading","length","DetailMain","DetailRow","useParams","useQueries","queryKey","queryFn","getDetails","getReviews","detailsLoading","isLoading","data","reviewsLoading","loading","Loading","MoviePoster","poster_path"],"sourceRoot":""}