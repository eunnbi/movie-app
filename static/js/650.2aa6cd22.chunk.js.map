{"version":3,"file":"static/js/650.2aa6cd22.chunk.js","mappings":"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","sources":["components/Movie/MoviePoster.js","components/Movie/LikeButton.js","components/Movie/MovieInfo.js","components/Movie/index.js","components/common/MovieList.js","hooks/useLike.js","hooks/useQueryParam.js","hooks/useScroll.js","components/MoviesTitle.js","components/Pagination.js","pages/Movies.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w342\";\r\n\r\nconst posterStyle = css`\r\n  height: 100%;\r\n  width: auto;\r\n  @media ${({ theme }) => theme.device.tablet} {\r\n    width: 200px;\r\n  }\r\n  @media ${({ theme }) => theme.device.mobile} {\r\n    width: 150px;\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  ${posterStyle}\r\n`;\r\n\r\nconst NoPoster = styled.div`\r\n  ${posterStyle}\r\n  min-height: 300px;\r\n  background-color: white;\r\n  font-size: 1.5rem;\r\n  display: flex;\r\n  justify-content: center;\r\n  text-align: center;\r\n  align-items: center;\r\n  color: rgba(0, 0, 0, 0.5);\r\n  text-transform: uppercase;\r\n  padding: 0 10px;\r\n  @media ${({ theme }) => theme.device.mobile} {\r\n    min-height: 225px;\r\n  }\r\n`;\r\n\r\nfunction MoviePoster({ poster }) {\r\n  return (\r\n    <>\r\n      {poster ? (\r\n        <Image src={`${IMAGE_BASE_URL}${poster}`} alt=\"poster\" />\r\n      ) : (\r\n        <NoPoster>NOT AVAILABLE POSTER</NoPoster>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MoviePoster;\r\n","import { FaRegHeart, FaHeart } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Button = styled.button`\r\n  color: #a20100;\r\n  position: absolute;\r\n  right: 10px;\r\n  top: 10px;\r\n  font-size: 2rem;\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n  z-index: 1;\r\n`;\r\n\r\nfunction LikeButton({ like, onLike }) {\r\n  return (\r\n    <Button onClick={onLike}>{like ? <FaHeart /> : <FaRegHeart />}</Button>\r\n  );\r\n}\r\n\r\nexport default LikeButton;\r\n","import { AiFillStar } from \"react-icons/ai\";\r\nimport Heading from \"../common/Heading\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMovieInfo = styled.div`\r\n  visibility: hidden;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  color: #fff;\r\n  padding: 0.5rem 1rem;\r\n  transition: all 0.3s linear;\r\n  transform: translateY(100%);\r\n`;\r\n\r\nconst MovieInfoRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  .year {\r\n    font-size: 13px;\r\n  }\r\n`;\r\n\r\nconst Rating = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  svg {\r\n    color: #f4c519;\r\n    margin-right: 3px;\r\n  }\r\n`;\r\n\r\nfunction MovieInfo({ title, originalTitle, year, rating, ...props }) {\r\n  return (\r\n    <StyledMovieInfo {...props}>\r\n      <div>\r\n        <Heading level={4}>\r\n          {title}\r\n          {title !== originalTitle && (\r\n            <>\r\n              <br />({originalTitle})\r\n            </>\r\n          )}\r\n        </Heading>\r\n      </div>\r\n      <MovieInfoRow>\r\n        <p className=\"year\">{!isNaN(year) && year}</p>\r\n        {rating !== 0 && (\r\n          <Rating>\r\n            <AiFillStar />\r\n            <span>{rating}</span>\r\n          </Rating>\r\n        )}\r\n      </MovieInfoRow>\r\n    </StyledMovieInfo>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport MoviePoster from \"./MoviePoster\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport { favoritesStateContext } from \"../../contexts/favorites\";\r\nimport { useLike } from \"../../hooks/useLike\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MovieLink = styled(Link)`\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n  height: 100%;\r\n  &:hover .MovieInfo {\r\n    visibility: visible;\r\n    transform: translateY(0);\r\n  }\r\n`;\r\n\r\nconst Movie = ({ movie }) => {\r\n  const { search, pathname } = useLocation();\r\n  const {\r\n    title,\r\n    original_title: originalTitle,\r\n    poster_path: poster,\r\n    id,\r\n    vote_average: rating,\r\n  } = movie;\r\n  const { like, onLike } = useLike(movie);\r\n\r\n  return (\r\n    <li>\r\n      <MovieLink\r\n        to={`/movie/${id}${search}${search ? \"&\" : \"?\"}from=${pathname}`}\r\n      >\r\n        <LikeButton like={like} onLike={onLike} />\r\n        <MoviePoster poster={poster} />\r\n        <MovieInfo\r\n          title={title}\r\n          originalTitle={originalTitle}\r\n          year={parseInt(movie.release_date)}\r\n          rating={rating}\r\n          className=\"MovieInfo\"\r\n        />\r\n      </MovieLink>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\nimport Movie from \"../Movie\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledMovieList = styled.ul`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 2rem;\r\n  justify-content: center;\r\n`;\r\n\r\nconst MovieList = ({ movies }) => {\r\n  return (\r\n    <StyledMovieList>\r\n      {movies.map((movie) => (\r\n        <Movie key={movie.id} movie={movie} />\r\n      ))}\r\n    </StyledMovieList>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  favoritesDispatchContext,\r\n  favoritesStateContext,\r\n} from \"../contexts/favorites\";\r\n\r\nexport const useLike = (movie) => {\r\n  const favoriteMovies = useContext(favoritesStateContext);\r\n  const { addFavoriteMovie, removeFavoriteMovie } = useContext(\r\n    favoritesDispatchContext\r\n  );\r\n  const [like, setLike] = useState(false);\r\n\r\n  const onLike = (e) => {\r\n    e.preventDefault();\r\n    setLike(!like);\r\n    if (like) removeFavoriteMovie(movie.id);\r\n    else addFavoriteMovie(movie);\r\n  };\r\n\r\n  useEffect(() => {\r\n    favoriteMovies.forEach(\r\n      (favorite) => favorite.id === movie.id && setLike(true)\r\n    );\r\n  }, []);\r\n\r\n  return { like, onLike };\r\n};\r\n","import { useLocation } from \"react-router-dom\";\r\n\r\nexport const useQueryParam = (key, initialValue) => {\r\n  const { search } = useLocation();\r\n  const params = new URLSearchParams(search);\r\n  const queryParam = params.get(key);\r\n  return queryParam ? queryParam : initialValue;\r\n};\r\n","import { useEffect } from \"react\";\r\n\r\nexport const useScroll = (deps) => {\r\n    useEffect(() => {\r\n        window.scrollTo({\r\n            top: 0\r\n        });\r\n    }, deps);\r\n};","import Heading from \"./common/Heading\";\r\nimport { FiChevronLeft } from \"react-icons/fi\";\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StyledMoviesTitle = styled.div`\r\n  position: relative;\r\n  margin-bottom: 3rem;\r\n  text-transform: capitalize;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  svg {\r\n    font-size: 2rem;\r\n    position: absolute;\r\n    left: 0;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n  }\r\n`;\r\nfunction MoviesTitle({ type }) {\r\n  const navigate = useNavigate();\r\n  const goHome = () => navigate(\"/\");\r\n  return (\r\n    <StyledMoviesTitle className=\"movies__title\">\r\n      <FiChevronLeft onClick={goHome} />\r\n      <Heading>{type.replace(\"_\", \" \")} movies</Heading>\r\n    </StyledMoviesTitle>\r\n  );\r\n}\r\n\r\nexport default MoviesTitle;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledPagination = styled.nav`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 3rem;\r\n  gap: 1.3rem;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: #fff;\r\n  background: #000;\r\n  padding: 0.7rem;\r\n  border-radius: 5px;\r\n  flex-basis: 2rem;\r\n  transition: all 0.3s ease-in-out;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.skyBlue};\r\n  }\r\n  &[disabled] {\r\n    cursor: auto;\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &[aria-current] {\r\n    background-color: ${({ theme }) => theme.color.skyBlue};\r\n  }\r\n`;\r\n\r\nconst Pagination = ({ total, limit, page, setPage }) => {\r\n  const numPages = Math.ceil(total / limit);\r\n  const btnNum = useRef(5);\r\n  const [offset, setOffset] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (page > offset + btnNum.current) {\r\n      setOffset(offset + btnNum.current);\r\n    } else if (page === offset) {\r\n      setOffset(offset - btnNum.current);\r\n    }\r\n  }, [page]);\r\n\r\n  return (\r\n    <StyledPagination>\r\n      <Button onClick={() => setPage(page - 1)} disabled={page === 1}>\r\n        <FaChevronLeft />\r\n      </Button>\r\n      {Array(numPages)\r\n        .fill()\r\n        .slice(offset, btnNum.current + offset)\r\n        .map((_, i) => (\r\n          <Button\r\n            key={i + 1 + offset}\r\n            onClick={() => setPage(i + offset + 1)}\r\n            aria-current={page === offset + i + 1 ? \"page\" : null}\r\n          >\r\n            {i + offset + 1}\r\n          </Button>\r\n        ))}\r\n      <Button onClick={() => setPage(page + 1)} disabled={page === numPages}>\r\n        <FaChevronRight />\r\n      </Button>\r\n    </StyledPagination>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport MoviesTitle from \"../components/MoviesTitle\";\r\nimport MovieList from \"../components/common/MovieList\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { moviesContext } from \"../contexts/movies\";\r\nimport { useQueryParam } from \"../hooks/useQueryParam\";\r\nimport { useScroll } from \"../hooks/useScroll\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MoviesMain = styled.main`\r\n  width: 90vw;\r\n  padding: 2.5rem 0;\r\n`;\r\n\r\nconst Movies = () => {\r\n  const queryParam = useQueryParam(\"page\", 1);\r\n  const navigate = useNavigate();\r\n  const { type } = useParams();\r\n  const { movies } = useContext(moviesContext);\r\n  const data = movies[type];\r\n  const [page, setPage] = useState(Number(queryParam));\r\n  const limit = 12;\r\n  const offset = (page - 1) * limit;\r\n\r\n  useScroll([page]);\r\n  useEffect(() => {\r\n    navigate(`?page=${page}`);\r\n  }, [page]);\r\n\r\n  return (\r\n    <MoviesMain>\r\n      {type && <MoviesTitle type={type} />}\r\n      {data && (\r\n        <>\r\n          <MovieList movies={data.slice(offset, offset + limit)} />\r\n          <Pagination\r\n            total={data.length}\r\n            limit={limit}\r\n            page={page}\r\n            setPage={setPage}\r\n          />\r\n        </>\r\n      )}\r\n    </MoviesMain>\r\n  );\r\n};\r\n\r\nexport default Movies;\r\n"],"names":["posterStyle","css","theme","device","tablet","mobile","Image","styled","NoPoster","poster","src","alt","Button","like","onLike","onClick","StyledMovieInfo","MovieInfoRow","Rating","title","originalTitle","year","rating","props","Heading","level","className","isNaN","MovieLink","Link","movie","useLocation","search","pathname","original_title","poster_path","id","vote_average","useLike","to","MoviePoster","parseInt","release_date","StyledMovieList","movies","map","favoriteMovies","useContext","favoritesStateContext","favoritesDispatchContext","addFavoriteMovie","removeFavoriteMovie","useState","setLike","useEffect","forEach","favorite","e","preventDefault","useQueryParam","key","initialValue","queryParam","URLSearchParams","get","useScroll","deps","window","scrollTo","top","StyledMoviesTitle","type","navigate","useNavigate","replace","StyledPagination","color","skyBlue","total","limit","page","setPage","numPages","Math","ceil","btnNum","useRef","offset","setOffset","current","disabled","Array","fill","slice","_","i","MoviesMain","useParams","data","moviesContext","Number","MovieList","length"],"sourceRoot":""}